// Generated by CoffeeScript 1.6.3
require(['domReady!', 'lodash', 'rsvp', 'api', 'ractive', 'leaflet', 'text!templates/sets.html'], function(doc, _, rsvp, api, R, L, t_sets) {
  var NZ_LATLON, NZ_SETNAME, RE_LL, map, marker, moveMap, sets;
  rsvp.on('error', function(event) {
    if (typeof console.error === "function") {
      console.error('Error in promise');
    }
    return typeof console.dir === "function" ? console.dir(event) : void 0;
  });
  RE_LL = /^LL:(-?[\d\.]+),\s?(-?[\d\.]+)/;
  NZ_LATLON = [-41.29225, -185.22537];
  NZ_SETNAME = 'New Zealand';
  sets = new R({
    el: 'sets',
    template: t_sets
  });
  map = L.map('map', {
    zoomControl: false
  });
  map.setView(NZ_LATLON, 4);
  L.tileLayer('http://{s}.tile.cloudmade.com/{key}/{styleId}/256/{z}/{x}/{y}.png', {
    attribution: '<a href="http://openstreetmap.org">OSM</a> | <a href="http://cloudmade.com">CloudMade</a>',
    maxZoom: 16,
    key: 'de8efc7432d34bb6ae69673b27cf52f3',
    styleId: '114653'
  }).addTo(map);
  marker = null;
  moveMap = function(latlon) {
    if (!latlon) {
      map.removeLayer(marker);
      marker = null;
      return;
    }
    if (marker) {
      marker.setLatLng(latlon);
    } else {
      marker = L.circleMarker(latlon, {
        color: 'red',
        radius: 8,
        weight: 1,
        fill: false,
        opacity: 1
      });
    }
    return marker.addTo(map);
  };
  return rsvp.hash({
    collections: api.getCollections(),
    sets: api.getSets()
  }).then(function(promises) {
    var kiwiCollection, kiwiSets;
    kiwiCollection = _.find(promises['collections'].collections.collection, function(collection) {
      return collection.title === NZ_SETNAME;
    });
    kiwiSets = kiwiCollection.set.reverse();
    _.each(kiwiSets, function(set) {
      var lat, lon, photoset, result;
      photoset = _.find(promises['sets'].photosets.photoset, function(photoset) {
        return photoset.id === set.id;
      });
      if (photoset) {
        set.img = photoset.primary_photo_extras.url_s;
      }
      result = RE_LL.exec(set.description);
      if (!result) {
        return;
      }
      lat = +result[1];
      lon = +result[2];
      if (Number.isNaN(lat || Number.isNaN(lon))) {
        return;
      }
      return set.latlon = [lat, lon];
    });
    sets.set({
      sets: kiwiSets,
      notEmpty: function(arr) {
        return arr != null ? arr.length : void 0;
      }
    });
    sets.on('locate', function(event) {
      var latlon;
      latlon = this.get(event.keypath).latlon;
      return moveMap(latlon);
    });
    sets.on('go', function(event) {
      var latlon, zoom;
      latlon = this.get(event.keypath).latlon;
      zoom = map.getZoom();
      return map.setZoomAround(latlon, 9, {
        animate: true
      });
    });
    return console.dir(sets);
  });
});
